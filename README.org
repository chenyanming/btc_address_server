#+TITLE:   btc_address_server
#+DATE:    August 3, 2021
#+STARTUP: inlineimages nofold

* Table of Contents :TOC_3:noexport:
- [[#description][Description]]
- [[#features][Features]]
- [[#configuration][Configuration]]
- [[#examples][Examples]]
  - [[#get-the-welcome-message][Get the welcome message]]
  - [[#post-seed-and-get-the-hd-segwit-address][Post seed and get the HD segwit address]]
  - [[#post-m-n-and-public_keys-and-get-the-multisig-p2sh-address][Post m, n, and public_keys and get the multisig p2sh address]]
  - [[#bad-request-400][BAD REQUEST (400)]]
- [[#test-server][Test Server]]
- [[#license][License]]

* Description
Bitcoin address generation server

* Features
1. Generate the public key and a Hierarchical Deterministic (HD) Segregated Witness (SegWit) bitcoin address from the loaded seed and given path.
1. Generate an n-out-of-m Multisignature (multi-sig) Pay-To-Script-Hash (P2SH) bitcoin address, where n, m and public keys can be specified

* Configuration
Rust stable ~1.54~

#+begin_src rust
cargo run
#+end_src

Server will be run as [[127.0.0.1:8080][127.0.0.1:8080]].

Run ~cargo test~ to verify all unit tests.

* Examples
All REST operations are listed below:

** Get the welcome message
#+begin_src sh

# GET
GET http://127.0.0.1:8080/

# Result
Welcome to bitcoin address server
#+end_src

** Post seed and get the HD segwit address

#+begin_src sh

# POST
POST http://127.0.0.1:8080/seed
Content-Type: application/json
{
        "seed": "army van defense carry jealous true garbage claim echo media make crunch"
}

# Result
{
  "public_key": "031507acb2211091ea30c6ab959dfe0ec01fde80d272fa4070995df56958ee6ae6",
  "address": "bc1qx0g5ltavjlkh4ywfnqr7qr4u9qxfw0jmsnj2zt"
}
#+end_src


** Post m, n, and public_keys and get the multisig p2sh address
#+begin_src sh

# POST
POST http://127.0.0.1:8080/mofn
Content-Type: application/json
{
        "m": 2,
        "n": 3,
        "public_keys": ["03d728ad6757d4784effea04d47baafa216cf474866c2d4dc99b1e8e3eb936e730", "03aeb681df5ac19e449a872b9e9347f1db5a0394d2ec5caf2a9c143f86e232b0d9", "02d83bba35a8022c247b645eed6f81ac41b7c1580de550e7e82c75ad63ee9ac2fd"]
}

# Result
{
  "public_key": "",
  "address": "38TN2ejJLXnxnDE8wbj6U6RrYSQhsLH41V"
}
#+end_src

** BAD REQUEST (400)
For bad requesting, we generate the error as following:
#+begin_src sh
# error
{
  "error": "N is larger than the total number of public keys"
}
#+end_src

* Test Server
A test server is built - https://btcaddress.herokuapp.com/, feel free to test :)

#+begin_src sh
curl https://btcaddress.herokuapp.com/
#+end_src

#+begin_src sh
curl -X POST -H "Content-Type: application/json" -d '{"seed": "army van defense carry jealous true garbage claim echo media make crunch"}' https://btcaddress.herokuapp.com/seed
#+end_src

#+begin_src sh
curl -X POST -H "Content-Type: application/json" -d '{"m": 2, "n": 3, "public_keys": ["03d728ad6757d4784effea04d47baafa216cf474866c2d4dc99b1e8e3eb936e730", "03aeb681df5ac19e449a872b9e9347f1db5a0394d2ec5caf2a9c143f86e232b0d9", "02d83bba35a8022c247b645eed6f81ac41b7c1580de550e7e82c75ad63ee9ac2fd"]}' https://btcaddress.herokuapp.com/mofn
#+end_src

* License
MIT license
